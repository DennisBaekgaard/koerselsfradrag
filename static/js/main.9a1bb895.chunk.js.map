{"version":3,"sources":["states.tsx","Step1.tsx","Day.tsx","Step2.tsx","Step3.tsx","Step4.tsx","Step5.tsx","Step6.tsx","Calculator.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["kilometerState","atom","key","default","christmasOffState","newYearsOffState","workSpecialDaysState","homeWorkDaysState","vacationWeeksState","highRateState","sickDaysState","daysOffState","title","selected","useRecoilState","kilometers","setKilometers","highRate","setHighRate","justify","span","style","margin","size","defaultValue","placeholder","padding","addonAfter","onChange","val","value","parseInt","target","console","log","offset","checkedChildren","unCheckedChildren","defaultChecked","message","width","description","type","showIcon","marginTop","props","offdays","setOffDays","flex","block","find","x","data","onClick","arr","index","newValue","dayData","newData","indexOf","slice","christmasOff","setChristmasOff","newYearsOff","setNewYearsOff","workSpecialDays","setWorkSpecialDays","gutter","map","day","Day","holidays","setHolidays","homeWorkDays","setHomeWorkDays","sickDays","setSickDays","vacationDays","filter","length","calculateDeduction","actualWorkDays","Math","round","Step","Steps","steps","content","useState","currentStep","setCurrent","Step1","currentApp","setCurrentApp","useEffect","Step2","Step3","Step4","Step5","Step6","current","item","App","started","setStarted","align","Calculator","CarOutlined","className","icon","ArrowRightOutlined","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a1bb895.chunk.js","sourcesContent":["import {\r\n    RecoilRoot,\r\n    atom,\r\n    selector,\r\n    useRecoilState,\r\n    useRecoilValue,\r\n  } from 'recoil';\r\n\r\nexport const kilometerState = atom({\r\n    key: 'kilometerState',\r\n    default: 0,\r\n  });\r\n\r\nexport const christmasOffState = atom({\r\n    key: \"christmasOffState\",\r\n    default: true\r\n});\r\nexport const newYearsOffState = atom({\r\n    key: \"newYearsOffState\",\r\n    default: true\r\n})\r\n\r\nexport const workSpecialDaysState = atom<null|boolean>({\r\n    key: \"workSpecialDaysState\",\r\n    default: null\r\n})\r\n\r\nexport const homeWorkDaysState = atom({\r\n    key: \"homeWorkDaysState\",\r\n    default: 0\r\n});\r\n\r\nexport const vacationWeeksState = atom({\r\n    key: \"vacationWeeksState\",\r\n    default: 0\r\n});\r\n\r\nexport const highRateState = atom({\r\n    key: \"highRateState\",\r\n    default: false\r\n});\r\n\r\nexport const sickDaysState = atom({\r\n    key: \"sickDaysState\",\r\n    default: 0\r\n});\r\n\r\nexport const daysOffState = atom({\r\n    key: 'daysOffState',\r\n    default: [\r\n        {\r\n            title: \"Palmesøndag\",\r\n            selected: false,\r\n        },\r\n       {\r\n        title: \"Skærtorsdag\",\r\n        selected: false\r\n       },\r\n       {\r\n    \r\n           title:\"Langfredag\",\r\n           selected: false\r\n        },\r\n        {\r\n    \r\n            title: \"Påskedag\",\r\n            selected: false,\r\n        },\r\n        {\r\n            title:\"2. påskedag\",\r\n            selected: false\r\n        },\r\n        {\r\n            title: \"Store bededag\",\r\n            selected: false\r\n        },\r\n        {\r\n            title: \"Pinsedag\",\r\n            selected: false\r\n        },\r\n        {\r\n            title: \"2. pinsedag\",\r\n            selected: false,\r\n        },\r\n        {\r\n            title: \"Juledag\",\r\n            selected: false\r\n        },\r\n        {\r\n            title: \"2. Juledag\",\r\n            selected: false\r\n        },\r\n        {\r\n            title: \"Arbejdernes kampdag\",\r\n            selected: false\r\n        },\r\n        {\r\n            title:   \"Grundlovsdag\",\r\n            selected: false\r\n        }\r\n    ]\r\n});","import {useState, useEffect} from 'react';\r\nimport {Row, Col, Input, Switch, Alert} from 'antd';\r\nimport { GlobalOutlined } from '@ant-design/icons';\r\nimport {\r\n    RecoilRoot,\r\n    atom,\r\n    selector,\r\n    useRecoilState,\r\n    useRecoilValue,\r\n  } from 'recoil';\r\nimport { highRateState, kilometerState } from './states';\r\n\r\n\r\nexport default () => {\r\n    \r\n    const [kilometers, setKilometers] = useRecoilState(kilometerState);\r\n    const [highRate, setHighRate] = useRecoilState(highRateState);\r\n    return (\r\n        <>\r\n            <Row justify=\"center\">\r\n                <Col span={20} style={{margin: 24}}>\r\n                    <label>Hvor langt har du til arbejde hver dag?</label>\r\n                    <Input size=\"large\" defaultValue={kilometers} placeholder={\"indtast kilometer\"} style={{padding: \"24px !important\"}} addonAfter=\"km\" onChange={(val) => {\r\n                        let value = parseInt(val.target.value, 10);\r\n                        if(typeof value == \"number\") {\r\n                            setKilometers(value);\r\n                            console.log(\"setting number\" + value);\r\n                        } else {\r\n                            setKilometers(0);\r\n                        }\r\n                    }}  /> \r\n                </Col>\r\n            </Row>\r\n            {\r\n            kilometers*2 > 120 && (\r\n                <Row>\r\n                    <Col span={20} offset={2}>\r\n                        <Row justify=\"start\">\r\n                            <Row style={{padding: 6}}>\r\n                            <Col span={20}><label>Du har langt til arbejde - bor du i en yderkommune?</label></Col>\r\n                            <Col offset={1} span={1}><Switch checkedChildren=\"Ja\" unCheckedChildren=\"Nej\" defaultChecked={highRate} onChange={(val) => setHighRate(val)} /></Col>\r\n                            </Row>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            )\r\n            }\r\n            <Row justify=\"center\">\r\n                <Col span={20}>\r\n                    { kilometers  > 0 && kilometers < 12 && (\r\n                        <Alert\r\n                        message=\"Desværre...\"\r\n                        style={{width: \"100%\"}}\r\n                        description=\"Du skal køre mindst 12 kilometer hver vej, for at være berettiget til kørselsfradrag\"\r\n                        type=\"warning\"\r\n                        showIcon\r\n                      />\r\n                    )}\r\n                    {\r\n                        kilometers >= 12 && (\r\n                            <Alert\r\n                            message=\"Perfekt!\"\r\n                            style={{width: \"100%\", marginTop: 24}}\r\n                            description={`Du har ${kilometers*2}km til og fra arbejde hver dag.`}\r\n                            type=\"success\"\r\n                            showIcon\r\n                          /> \r\n                        )\r\n                    }\r\n                    {\r\n                        kilometers > 60 && (\r\n                            <Alert\r\n                            message=\"Bemærk!\"\r\n                            style={{width: \"100%\", marginTop: 24}}\r\n                            description={`Du har ${kilometers*2}km til og fra arbejde hver dag. - Det betyder din sats er 0,98 for hver kilometer over de 120 hvis du bor i en yderkommune`}\r\n                            type=\"warning\"\r\n                            showIcon\r\n                          /> \r\n                        )\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n} ","import {useState} from 'react';\r\nimport {Col, Button} from 'antd';\r\nimport {\r\n    RecoilRoot,\r\n    atom,\r\n    selector,\r\n    useRecoilState,\r\n    useRecoilValue,\r\n  } from 'recoil';\r\nimport { daysOffState } from './states';\r\n\r\nfunction replaceItemAtIndex(arr: any, index: number, newValue: any) {\r\n    return [...arr.slice(0, index), newValue, ...arr.slice(index + 1)];\r\n  }\r\n\r\nexport default (props: { data: {title: string; selected: boolean;}}) => {\r\n\r\n    const [offdays, setOffDays] = useRecoilState(daysOffState); \r\n\r\n    return (\r\n        <Col flex={1}>\r\n            <Button style={{width: \"250px\"}} block type={offdays.find(x => x.title == props.data.title)?.selected ? \"primary\" : \"default\"} \r\n        onClick={() => {\r\n\r\n            let dayData = offdays.find(x => x.title == props.data.title)!;\r\n            const newData = replaceItemAtIndex(offdays, offdays.indexOf(dayData), { title: dayData.title, selected: !dayData.selected })\r\n            setOffDays(newData);\r\n        }}>\r\n            {props.data.title}\r\n            </Button></Col>\r\n    );\r\n}","import {useState} from 'react';\r\nimport {Row, Col, Input, Switch, Radio, Button, Alert} from 'antd';\r\nimport { GlobalOutlined } from '@ant-design/icons';\r\nimport Day from './Day';\r\nimport { christmasOffState, daysOffState, newYearsOffState, workSpecialDaysState } from './states';\r\nimport {\r\n    RecoilRoot,\r\n    atom,\r\n    selector,\r\n    useRecoilState,\r\n    useRecoilValue,\r\n  } from 'recoil';\r\n\r\nexport default () => {\r\n    \r\n    const [offdays, setOffDays] = useRecoilState(daysOffState); \r\n    const [christmasOff, setChristmasOff] = useRecoilState(christmasOffState); \r\n    const [newYearsOff, setNewYearsOff] = useRecoilState(newYearsOffState); \r\n    const [workSpecialDays, setWorkSpecialDays] = useRecoilState(workSpecialDaysState);\r\n    return (\r\n        <>\r\n            <Row justify=\"center\">\r\n                <Col span={20} style={{margin: 24}}>\r\n                    <Row style={{padding: 6}}>\r\n                        <Col span={8}><label>Har du fri juleaftensdag?</label></Col>\r\n                        <Col offset={1} span={1}><Switch checkedChildren=\"Ja\" unCheckedChildren=\"Nej\" defaultChecked={christmasOff} onChange={(val) => setChristmasOff(val)} /></Col>\r\n                    </Row>\r\n                    <Row  style={{padding: 6}}>\r\n                        <Col span={8}><label>Har du fri nytårsaftensdag?</label></Col>\r\n                        <Col  offset={1} span={1}><Switch checkedChildren=\"Ja\" unCheckedChildren=\"Nej\" defaultChecked={newYearsOff} onChange={(val) => setNewYearsOff(val)}  /></Col>\r\n                    </Row>\r\n                    <Row  style={{padding: 6}}>\r\n                        <Col span={8}><label>Har du arbejdet på nogle af de normale helligdage?</label></Col>\r\n                        <Col span={1} offset={1}><Button size=\"large\" type={workSpecialDays == false ? \"primary\" : \"default\"} onClick={() => setWorkSpecialDays(false)} >Nej</Button></Col>\r\n                        <Col span={1} offset={1}><Button size=\"large\" type={workSpecialDays == true ? \"primary\" : \"default\"} onClick={() => setWorkSpecialDays(true)}>Ja</Button></Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n            <Row justify=\"center\">\r\n                <Col span={20}>\r\n                    {\r\n                        workSpecialDays == false && (\r\n                            <Alert \r\n                            message=\"Perfekt!\"\r\n                            style={{width: \"100%\"}}\r\n                            description={`Vi lader være med at regne helligdage med`}\r\n                            type=\"success\"\r\n                            showIcon\r\n                          /> \r\n                        )\r\n                    }\r\n                     {\r\n                        workSpecialDays == true && (\r\n                            <>\r\n                                <Row justify=\"start\">\r\n                                    <label>Vælg de dage du har arbejdet</label>\r\n                                    <Col span={12} offset={5}>\r\n                                        <Row gutter={[32,32]}>\r\n                                        {\r\n                                            offdays.map(day => {\r\n                                                return (\r\n                                                    <Day data={day} />\r\n                                                );\r\n                                            })\r\n                                        }\r\n                                        </Row>\r\n                                    </Col>\r\n                                </Row>\r\n                            </>\r\n                    )}\r\n                </Col>\r\n            </Row> \r\n        </>\r\n    );\r\n} ","import {useState} from 'react';\r\nimport {Row, Col, InputNumber, Alert} from 'antd';\r\nimport { GlobalOutlined } from '@ant-design/icons';\r\nimport {\r\n    RecoilRoot,\r\n    atom,\r\n    selector,\r\n    useRecoilState,\r\n    useRecoilValue,\r\n  } from 'recoil';\r\nimport { vacationWeeksState } from './states';\r\nexport default () => {\r\n    \r\n    const [holidays, setHolidays] = useRecoilState(vacationWeeksState);\r\n\r\n    return (\r\n        <>\r\n            <Row justify=\"center\">\r\n                <Col span={20} style={{margin: 24}}>\r\n                    <Row>\r\n                        <Col span={6}><label> Hvor mange dages ferie har du haft?<br /> De fleste har 5 eller 6 uger</label></Col>\r\n                        <Col><InputNumber size=\"large\" placeholder={\"25\"} style={{padding: \"24px !important\"}} onChange={(val) => setHolidays(val as number)} /> </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n            <Row justify=\"center\">\r\n                <Col span={20}>\r\n                    { holidays  > 0 && holidays < 20 && (\r\n                        <Alert\r\n                        message=\"Ok men...\"\r\n                        style={{width: \"100%\"}}\r\n                        description=\"Kan de virkeligt passe du har holdt under 4 ugers ferie?\"\r\n                        type=\"warning\"\r\n                        showIcon\r\n                      />\r\n                    )}\r\n                    {\r\n                        holidays > 19 && (\r\n                            <Alert\r\n                            message=\"Perfekt!\"\r\n                            style={{width: \"100%\"}}\r\n                            description={`Vi regner ferien ud :)`}\r\n                            type=\"success\"\r\n                            showIcon\r\n                          /> \r\n                        )\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n} ","import {useState} from 'react';\r\nimport {Row, Col, InputNumber, Alert} from 'antd';\r\nimport { GlobalOutlined } from '@ant-design/icons';\r\nimport { homeWorkDaysState } from './states';\r\nimport {\r\n    RecoilRoot,\r\n    atom,\r\n    selector,\r\n    useRecoilState,\r\n    useRecoilValue,\r\n  } from 'recoil';\r\nexport default () => {\r\n    \r\n    const [homeWorkDays, setHomeWorkDays] = useRecoilState(homeWorkDaysState);\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col>\r\n                <Alert\r\n                        message=\"Satans Corona...\"\r\n                        style={{width: \"100%\"}}\r\n                        description={<p>Corona har gjort mange ikke har været så meget på arbejde som normalt. Danmark lukkede ned d. 11 Marts 2020, og var lukket frem til d. 30 Marts 2020.\r\n                        Danmark lukkede delvist ned igen d. 7 December, og endnu mere ned d. 17 December og åbnede først delvist op igen d. 8 Februar. Dermed er der store udsving alt efter\r\n                        hvor du har boet ift. hvor mange hjemmearbejdsdage du muligvis har haft. Har du generelt set været hjemsendt i lukkeperioden er det ca. <strong>13 dage i foråret</strong>, \r\n                        og <strong>25 dage i julen og start 2021</strong>.\r\n                        Var du hjemsendt i minksagsperioden var det yderligere fra d. 7 November til d. 23 November, eller <strong>10 arbejdsdage</strong>. Total set er det <strong>48 arbejdsdage</strong> du kan have mistet.</p>}\r\n                        type=\"info\"\r\n                        showIcon\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            <Row justify=\"center\">\r\n                <Col span={20} style={{margin: 24}}>\r\n                    <Row>\r\n                        <Col span={6}><label>Hvor mange dage har du arbejdet hjemme fra?</label></Col>\r\n                        <Col><InputNumber size=\"large\" defaultValue={homeWorkDays} placeholder={\"25\"} style={{padding: \"24px !important\"}} onChange={(val) => setHomeWorkDays(val as number)} /> </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n            <Row justify=\"center\">\r\n                <Col span={20}>\r\n                    { homeWorkDays  > 0 && homeWorkDays < 10 && (\r\n                        <Alert\r\n                        message=\"Fair nok...\"\r\n                        style={{width: \"100%\"}}\r\n                        description=\"Men husk lige på de sikkert er virkeligt obs. på folk som forsøger at hente nogle 'gratis' dage\"\r\n                        type=\"warning\"\r\n                        showIcon\r\n                      />\r\n                    )}\r\n                    {\r\n                        homeWorkDays > 9 && (\r\n                            <Alert\r\n                            message=\"Perfekt!\"\r\n                            style={{width: \"100%\"}}\r\n                            description={`Det tager vi med!`}\r\n                            type=\"success\"\r\n                            showIcon\r\n                          /> \r\n                        )\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n} ","import {useState} from 'react';\r\nimport {Row, Col, InputNumber, Alert} from 'antd';\r\nimport { GlobalOutlined } from '@ant-design/icons';\r\nimport { sickDaysState } from './states';\r\nimport {\r\n    RecoilRoot,\r\n    atom,\r\n    selector,\r\n    useRecoilState,\r\n    useRecoilValue,\r\n  } from 'recoil';\r\nexport default () => {\r\n    \r\n    const [sickDays, setSickDays] = useRecoilState(sickDaysState);\r\n\r\n    return (\r\n        <>\r\n            <Row justify=\"center\">\r\n                <Col span={20} style={{margin: 24}}>\r\n                    <Row>\r\n                        <Col span={6}><label>Hvor mange dage du været syg?</label></Col>\r\n                        <Col><InputNumber size=\"large\" defaultValue={sickDays} placeholder={\"5\"} style={{padding: \"24px !important\"}} onChange={(val) => setSickDays(val as number)} /> </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row> \r\n            <Row justify=\"center\">\r\n                <Col span={20}>\r\n                    { sickDays == 0 && (\r\n                        <Alert\r\n                        message=\"Champ\"\r\n                        style={{width: \"100%\"}}\r\n                        description=\"Sygedage er for pussies alligevel!\"\r\n                        type=\"success\"\r\n                        showIcon\r\n                      />\r\n                    )}\r\n                    {\r\n                        sickDays != 0 && (\r\n                            <Alert\r\n                            message=\"Perfekt!\"\r\n                            style={{width: \"100%\"}}\r\n                            description={`Vi tager sygedagene med :)`}\r\n                            type=\"success\"\r\n                            showIcon\r\n                          /> \r\n                        )\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n} ","import {useState} from 'react';\r\nimport {Row, Col, InputNumber, Alert} from 'antd';\r\nimport { GlobalOutlined } from '@ant-design/icons';\r\nimport { christmasOffState, daysOffState, kilometerState, newYearsOffState,vacationWeeksState, sickDaysState, homeWorkDaysState, highRateState } from './states';\r\nimport {\r\n    RecoilRoot,\r\n    atom,\r\n    selector,\r\n    useRecoilState,\r\n    useRecoilValue,\r\n  } from 'recoil';\r\n\r\n\r\n\r\nexport default () => {\r\n    \r\n    const [kilometers, setKilometers] = useRecoilState(kilometerState);\r\n    const [offdays, setOffDays] = useRecoilState(daysOffState); \r\n    const [christmasOff, setChristmasOff] = useRecoilState(christmasOffState); \r\n    const [newYearsOff, setNewYearsOff] = useRecoilState(newYearsOffState); \r\n    const [vacationDays, setVacationDays] = useRecoilState(vacationWeeksState);\r\n    const [sickDays, setSickDays] = useRecoilState(sickDaysState);\r\n    const [homeWorkDays, setHomeWorkDays] = useRecoilState(homeWorkDaysState);\r\n    \r\n    const [highRate, setHighRate] = useRecoilState(highRateState);\r\n\r\n    const totalWorkDays = 254;\r\n    \r\n    const holidays = () => {\r\n        return ( 0 +\r\n            (christmasOff == true ? 1 : 0)\r\n                + (newYearsOff == true ? 1 : 0)\r\n                + offdays.filter(x => x.selected == true).length\r\n        );\r\n    }\r\n\r\n    const calculateWorkDays = () => {\r\n\r\n        return ( \r\n            totalWorkDays - holidays() - vacationDays - sickDays - homeWorkDays\r\n        );\r\n    }\r\n\r\n    const calculateDeduction = () => {\r\n        \r\n        if(kilometers > 60) return 1.96*kilometers*actualWorkDays;\r\n        \r\n        let highRate = 120 * 1.96 * actualWorkDays;\r\n        let lowRate = (kilometers - 60) * 0.98 * actualWorkDays; \r\n        \r\n        return highRate+lowRate;\r\n    }\r\n    \r\n    let actualWorkDays = calculateWorkDays();\r\n\r\n    return (\r\n        <>\r\n            <Row justify=\"center\">\r\n                <Col span={20} style={{margin: 24}}>\r\n                    <h1>Udregning</h1>\r\n                </Col>\r\n            </Row> \r\n            <Row justify=\"center\">\r\n                <Col span={20}>\r\n                    <Row>\r\n                        <Col span={10}>Totale arbejdsdage</Col>\r\n                        <Col span={10}><strong>{totalWorkDays}</strong> dage</Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col span={10}>Dine arbejdsdage</Col>\r\n                        <Col span={10}><strong>{actualWorkDays}</strong> dage</Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col span={10}>Helligdage/Fridage</Col>\r\n                        <Col span={10}><strong>{holidays()}</strong> dage</Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col span={10}>Feriedage</Col>\r\n                        <Col span={10}><strong>{vacationDays}</strong> dage</Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col span={10}>Sygedage</Col>\r\n                        <Col span={10}><strong>{sickDays}</strong> dage</Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col span={10}>Coronadage/Hjemmedage</Col>\r\n                        <Col span={10}><strong>{homeWorkDays}</strong> dage</Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col span={10}>Kørte kilometer</Col>\r\n                        <Col span={10}><strong>{kilometers*actualWorkDays}</strong>km</Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col style={{marginTop: 24}} span={10}>Fradrag</Col>\r\n                        <Col span={10}><strong>kr. {Math.round(calculateDeduction())}</strong></Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col span={10}>Penge i lommen</Col>\r\n                        <Col span={10}>ca. <strong>kr. {Math.round(calculateDeduction()*0.26)}</strong></Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n} ","import {useState, useEffect} from 'react';\r\nimport { Steps, Row, Col, Button } from 'antd';\r\n\r\nimport { UserOutlined, SolutionOutlined, LoadingOutlined, SmileOutlined, CarOutlined, ArrowRightOutlined } from '@ant-design/icons';\r\nimport Step1 from './Step1';\r\nimport Step2 from './Step2';\r\nimport Step3 from './Step3';\r\nimport Step4 from './Step4';\r\nimport Step5 from './Step5';\r\nimport Step6 from './Step6';\r\nconst { Step } = Steps;\r\n\r\nconst steps = [\r\n  {\r\n    title: 'Hvor langt kører du?',\r\n    content: 'First-content',\r\n  },\r\n  {\r\n    title: 'Har du arbejdet på nogle helligdage?',\r\n    content: 'Second-content',\r\n  },\r\n  {\r\n    title: 'Hvor meget ferie har du haft?',\r\n    content: 'Last-content',\r\n  },\r\n  {\r\n    title: 'Hvor mange dage har du arbejdet hjemmefra?',\r\n    content: \"shit\"\r\n  },\r\n  {\r\n    title: 'Har du været syg?',\r\n    content: \"shit\"\r\n  }\r\n];\r\nexport default () => {\r\n    const [currentStep, setCurrent] = useState(0);\r\n    const [currentApp, setCurrentApp] = useState(<Step1 />);\r\n\r\n    useEffect(() => {\r\n        switch(currentStep){\r\n            case 0:\r\n                setCurrentApp(<Step1 />);\r\n                break;\r\n            case 1:\r\n                setCurrentApp(<Step2 />);\r\n                break;\r\n            case 2:\r\n                setCurrentApp(<Step3 />);\r\n                break;\r\n            case 3:\r\n                setCurrentApp(<Step4 />);\r\n                break;\r\n            case 4:\r\n                setCurrentApp(<Step5 />);\r\n                break;\r\n            case 5:\r\n                setCurrentApp(<Step6 />);\r\n                break;\r\n            default:\r\n                setCurrentApp(<Step1 />);\r\n        }\r\n    }, [currentStep])\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <Steps current={currentStep}> \r\n                        {steps.map(item => (\r\n                        <Step key={item.title} description={item.title} />\r\n                        ))}\r\n                    </Steps>\r\n                </Col>\r\n            </Row>\r\n            <Row justify=\"start\"> \r\n                <Col span={24}>\r\n                    <Row>\r\n                        <Col span={24}>\r\n                            <div style={{margin: 50}}>\r\n                                {currentApp}\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row justify=\"start\">\r\n                        { currentStep < 4 &&(\r\n                         <>\r\n                         <Col span={2} offset={1}>\r\n                                <Button type=\"primary\" onClick={() => setCurrent(currentStep-1)}>Forrige</Button>\r\n                            </Col>\r\n                            <Col span={2} offset={22}>\r\n                                <Button onClick={() => setCurrent(currentStep + 1)} type=\"primary\">Næste</Button>\r\n                            </Col>\r\n                        </>\r\n                        )}\r\n                        {\r\n                            currentStep == 4 && (\r\n                                <Col span={2} offset={22}>\r\n                                    <Button onClick={() => setCurrent(currentStep + 1)} type=\"primary\">Færdiggør</Button>\r\n                                </Col>\r\n                            )\r\n                        }\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n}","import { useState } from 'react';\nimport './App.css';\nimport { Row, Col, Button } from 'antd';\nimport Calculator from './Calculator';\nimport {\n  RecoilRoot,\n  atom,\n  selector,\n  useRecoilState,\n  useRecoilValue,\n} from 'recoil';\nimport {ArrowRightOutlined, CarOutlined } from '@ant-design/icons';\n\nconst kilometerState = atom({\n  key: 'kilometerState',\n  default: 0,\n});\n\nfunction App() {\n\n  const [started, setStarted] = useState(false);\n\n  return (\n    <RecoilRoot>\n      <Row align=\"middle\" justify=\"center\">\n        <Col>\n          <h1>Beregn dit kørselsfradrag</h1>\n        </Col>\n      </Row>\n      { !started ? (\n        <>\n          <Row justify=\"center\">\n            <Col>\n              <CarOutlined className=\"car\" />\n            </Col>\n          </Row>\n          <Row align=\"middle\" justify=\"center\">\n            <Col span={10}>\n              <p>\n                2020 har været et mærkeligt år, og det kan være svært at vide hvor meget man nu lige kørte til og fra arbejde. \n                <br /><br/>Her er der en simpel udregner som hjælper dig på rette vej, så du både får det fradrag du er berettiget til, men også passer på ikke at få et skattesmæk.\n                <br/><br/>Eller, måske er det bare en hjælp til lige at regne ud hvor mange penge du får i hænderne for dit fradrag.\n              </p>\n            </Col>\n          </Row>\n          <Row justify=\"center\">\n            <Col>\n            <Button size=\"large\" type=\"primary\" onClick={() => setStarted(true)} icon={<ArrowRightOutlined/>}>Start</Button>\n            </Col>\n          </Row>\n        </>\n      ) :\n      <Row justify=\"center\" align=\"top\" >\n        <Col span={20}>\n          <Calculator />\n        </Col>\n      </Row>\n      }\n    </RecoilRoot>\n  ); \n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}